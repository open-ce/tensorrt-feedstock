{% set version = "0.6.9" %}
{% set sha256 = "ac07228bfd07f2fc3b9cb0b0f53f48af7537ad69399c4bdc69d7dcfe3fb85df9" %}   #[(x86_64) and (cudatoolkit == '11.0')]
{% set trt_tar = "TensorRT-7.2.3.4.CentOS-7.9.x86_64-gnu.cuda-11.0.cudnn8.1.tar.gz" %}  #[(x86_64) and (cudatoolkit == '11.0')]
{% set sha256 = "95b50a53e4a36be14aff9bf7bb6eab0858933b03e0f8c5949dfe2265a6ce9969" %}   #[(x86_64) and (cudatoolkit == '11.2')]
{% set trt_tar = "TensorRT-7.2.3.4.CentOS-7.9.x86_64-gnu.cuda-11.1.cudnn8.1.tar.gz" %}  #[(x86_64) and (cudatoolkit == '11.2')]

{% set trt_tar_dir =  environ.get('LOCAL_SRC_DIR', 0) %}

package:
  name: uff
  version: {{ version }}

source:
  - url: file://{{ trt_tar_dir }}/{{ trt_tar }}
    sha256: {{ sha256 }}  
    folder: tensorrt

build:
  number: 1
  string: py{{ python | replace(".", "") }}_{{ PKG_BUILDNUM }}
  skip: True  #[ppc64le]
  
requirements:
  build:
    # Use pins to control cos6/cos7 match
    - libgcc-ng  {{ libgcc }}
    - libstdcxx-ng  {{ libstdcxx }}
  host:
    # Use pins to control cos6/cos7 match
    - libgcc-ng  {{ libgcc }}
    - libstdcxx-ng  {{ libstdcxx }}
    - python {{ python }}
    - wheel {{ wheel }}
  run:
    - python {{ python }}

about:
  home: https://developer.nvidia.com/tensorrt
  license: NVIDIA Software License
  license_family: Proprietary
  summary: The uff package contains a set of utilites to convert trained models from various frameworks to a common format.
  description: |
    The uff package contains a set of utilites to convert trained models from various frameworks to a common format.
  doc_url: https://docs.nvidia.com/deeplearning/sdk/tensorrt-api/python_api/uff/uff.html

extra:
  recipe-maintainers:
    - open-ce/open-ce-dev-team
